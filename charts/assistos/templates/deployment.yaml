apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "assistos.fullname" . }}
  namespace: {{ template "assistos.namespace" . }}
  labels:
    {{- include "assistos.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "assistos.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmaps.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
      {{- with .Values.assistos.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "assistos.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "assistos.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.assistos.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-copy-data
          image: {{ .Values.assistos.image.repository }}:{{ .Values.assistos.image.tag }}
          command:
            - "sh"
            - "-c"
            - |
              # Function to copy all files and directories, overwriting existing ones
              copy_with_overwrite() {
                local src=$1
                local dest=$2
                echo "Copying all files from $src to $dest (with overwrite)..."
                
                # Create destination directory if it doesn't exist
                mkdir -p "$dest"
                
                # Find all files and directories in source
                cd "$src"
                find . -type f -o -type d | while read -r item; do
                  # Skip the root directory itself
                  if [ "$item" = "." ]; then
                    continue
                  fi
                  
                  # Get the relative path
                  rel_path="${item#./}"
                  dest_path="$dest/$rel_path"
                  
                  if [ -d "$item" ]; then
                    echo "Creating directory: $dest_path"
                    mkdir -p "$dest_path"
                  elif [ -f "$item" ]; then
                    echo "Copying file: $rel_path (overwriting if exists)"
                    cp -f "$item" "$dest_path"
                  fi
                done
                echo "Copy operation completed for $dest"
              }

              # Copy all content from external-volume with overwrite
              copy_with_overwrite "/assistos-workspace/apihub-root/external-volume" "/mnt/assistos-external-volume"

          volumeMounts:
            - name: assistos-external-volume
              mountPath: /mnt/assistos-external-volume
      containers:
        - name: assistos
          securityContext:
            {{- toYaml .Values.assistos.securityContext | nindent 12 }}
          image: "{{ .Values.assistos.image.repository }}:{{ .Values.assistos.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.assistos.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.assistos.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.assistos.readinessProbe | nindent 12 }}
          volumeMounts:
            - name: assistos-external-volume
              mountPath: /assistos-workspace/apihub-root/external-volume
            - name: assistos-apihub-root-config
              mountPath: /assistos-workspace/apihub-root/assistOS-configs.json
              subPath: assistOS-configs.json
              readOnly: true
            - name: assistos-secret-volume
              mountPath: /assistos-workspace/apihub-root/external-volume/config/apihub.json
              subPath: apihub.json
              readOnly: true
            - name: assistos-bdns-config-volume
              mountPath: /assistos-workspace/apihub-root/external-volume/config/bdns.hosts
              subPath: bdns.hosts
              readOnly: true
            - name: assistos-secret-volume
              mountPath: /assistos-workspace/env.json
              subPath: env.json
              readOnly: true
            - name: assistos-domains-volume
              mountPath: /assistos-workspace/apihub-root/external-volume/config/domains/{{ required "config.domain must be set" .Values.config.domain }}.json
              subPath: {{ required "config.domain must be set" .Values.config.domain }}.json
              readOnly: true
              {{- if ne .Values.config.domain .Values.config.subDomain }}
            - name: assistos-domains-volume
              mountPath: /assistos-workspace/apihub-root/external-volume/config/domains/{{ required "config.subDomain must be set" .Values.config.subDomain }}.json
              subPath: {{ required "config.subDomain must be set" .Values.config.subDomain }}.json
              readOnly: true
              {{- end}}
            - name: assistos-domains-volume
              mountPath: /assistos-workspace/apihub-root/external-volume/config/domains/{{ required "config.vaultDomain must be set" .Values.config.vaultDomain }}.json
              subPath: {{ required "config.vaultDomain must be set" .Values.config.vaultDomain }}.json
              readOnly: true
      volumes:
        - name: assistos-secret-volume
          secret:
            secretName: {{ include "assistos.fullname" . }}
            defaultMode: 0400
        - name: assistos-bdns-config-volume
          configMap:
            name: {{ include "assistos.fullname" . }}-bdns
        - name: assistos-domains-volume
          configMap:
            name: {{ include "assistos.fullname" . }}-domains
        - name: assistos-env-volume
          configMap:
            name: {{ include "assistos.fullname" . }}-environment
        - name: assistos-apihub-root-config
          configMap:
            name: {{ include "assistos.fullname" . }}-apihub-root-config
        - name: assistos-external-volume
          persistentVolumeClaim:
            claimName: {{ include "assistos.pvc" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
